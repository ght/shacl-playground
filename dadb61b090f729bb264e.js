(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{240:function(t,e){},385:function(t,e,n){const o=n(234),{Readable:s}=n(82),a=n(386);class i extends s{constructor(t,{context:e={},compact:n,flatten:o,frame:s,skipContext:a,encoding:i="object"}={}){super({objectMode:!0,read:()=>{}}),this.context=e,this.compact=n,this.flatten=o,this.frame=s,this.skipContext=a,this.encoding=i,t.on("prefix",(t,e)=>{this.context[t]||(this.context[t]=e.value)}),this.handleData(t)}async handleData(t){try{const e=(await a(t)).map(i.toJsonldQuad),n=await o.fromRDF(e),s=await this.transform(n,this.options);this.push(s),this.push(null)}catch(t){this.emit("error",t)}}async transform(t){return this.compact&&(t=await o.compact(t,this.context)),this.flatten&&(t=await o.flatten(t,this.context)),this.frame&&(t=await o.frame(t,this.context)),this.skipContext&&t["@context"]&&delete t["@context"],"string"===this.encoding?JSON.stringify(t):t}static toJsonldQuad(t){return{subject:i.toJsonldTerm(t.subject),predicate:i.toJsonldTerm(t.predicate),object:i.toJsonldTerm(t.object),graph:i.toJsonldTerm(t.graph)}}static toJsonldTerm(t){return"BlankNode"===t.termType?{termType:"BlankNode",value:"_:"+t.value}:t}}t.exports=i},386:function(t,e,n){const o=n(233);t.exports=function(t){return new Promise((e,n)=>{t.on("error",t=>{n(t)}),t.pipe(o(t=>{e(t)}))})}},408:function(t,e,n){const o=n(99),s=n(385);t.exports=class extends o{constructor(t){super(s,t)}}}}]);
//# sourceMappingURL=dadb61b090f729bb264e.js.map